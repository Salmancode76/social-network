[1mdiff --git a/backend/cmd/main.go b/backend/cmd/main.go[m
[1mindex bb9964b1..9bece193 100644[m
[1m--- a/backend/cmd/main.go[m
[1m+++ b/backend/cmd/main.go[m
[36m@@ -20,7 +20,7 @@[m [mfunc main() {[m
 		Posts: &services.PostModel{DB:DB},[m
 		Users:  &services.UserModel{DB: DB},[m
 		Groups: &services.GroupModel{DB: DB},[m
[31m-		[m
[32m+[m		[32mNotifications : &services.NotificationModel{DB: DB},[m
 	}[m
 	s:= CoreModels.Server{[m
 		HTTP: &http.Server{[m
[1mdiff --git a/backend/internal/db/sqlite/db.db b/backend/internal/db/sqlite/db.db[m
[1mindex 5ab07f88..fd1c8932 100644[m
Binary files a/backend/internal/db/sqlite/db.db and b/backend/internal/db/sqlite/db.db differ
[1mdiff --git a/backend/internal/handlers/GroupHandlers.go b/backend/internal/handlers/GroupHandlers.go[m
[1mindex c7057e1b..684d8293 100644[m
[1m--- a/backend/internal/handlers/GroupHandlers.go[m
[1m+++ b/backend/internal/handlers/GroupHandlers.go[m
[36m@@ -57,8 +57,14 @@[m [mfunc FetchAllGroups(app *CoreModels.App) http.HandlerFunc {[m
 			sendErrorResponse(w, "Method not allowed", http.StatusMethodNotAllowed)[m
 			return[m
 		}[m
[32m+[m		[32mid,err:=app.Users.GetUserIDFromSession(w,r)[m
 [m
[31m-		groups, err := app.Groups.GetAllGroups()[m
[32m+[m		[32mif err!=nil{[m
[32m+[m			[32msendErrorResponse(w, fmt.Sprintf("Failed to fetch posts: %v", err), http.StatusInternalServerError)[m
[32m+[m			[32mreturn[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mgroups, err := app.Groups.GetAllGroups(id)[m
 		if err != nil {[m
 			sendErrorResponse(w, fmt.Sprintf("Failed to fetch groups: %v", err), http.StatusInternalServerError)[m
 			return[m
[36m@@ -139,4 +145,34 @@[m [mfunc GetGroupMessages(app *CoreModels.App) http.HandlerFunc {[m
 		w.Header().Set("Content-Type", "application/json")[m
 		json.NewEncoder(w).Encode(response)[m
 	}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mfunc SendRequestToJoin(app *CoreModels.App) http.HandlerFunc{[m
[32m+[m	[32mreturn func(w http.ResponseWriter, r *http.Request) {[m
[32m+[m		[32mif CrosAllow(w, r) {[m
[32m+[m			[32mreturn[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif r.Method != "POST" {[m
[32m+[m			[32msendErrorResponse(w, "Method not allowed", http.StatusMethodNotAllowed)[m
[32m+[m			[32mreturn[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mvar id int[m
[32m+[m		[32mid ,err := app.Users.GetUserIDFromSession(w,r);[m
[32m+[m		[32mif err!=nil{[m
[32m+[m			[32msendErrorResponse(w, fmt.Sprintf("Invalid id data: %v", err), http.StatusBadRequest)[m
[32m+[m			[32mreturn[m[41m [m
[32m+[m		[32m}[m
[32m+[m		[32mgroup_id,err:= strconv.Atoi(r.URL.Query().Get("id"))[m
[32m+[m
[32m+[m		[32mif err!=nil{[m
[32m+[m			[32msendErrorResponse(w, fmt.Sprintf("Invalid id data: %v", err), http.StatusBadRequest)[m
[32m+[m			[32mreturn[m[41m [m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mapp.Notifications.SendRequestToJoinGroup(group_id,id)[m
[32m+[m
[32m+[m	[32m}[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/backend/internal/models/app/app.go b/backend/internal/models/app/app.go[m
[1mindex ebe567ae..383655a7 100644[m
[1m--- a/backend/internal/models/app/app.go[m
[1m+++ b/backend/internal/models/app/app.go[m
[36m@@ -17,6 +17,7 @@[m [mtype App struct {[m
 	Users   *services.UserModel[m
 	Posts   *services.PostModel[m
 	Groups 	*services.GroupModel[m
[32m+[m	[32mNotifications *services.NotificationModel[m
 	DB      *sql.DB[m
 	Session map[string]string[m
 	UserID  map[string]string[m
[1mdiff --git a/backend/internal/models/entities.go b/backend/internal/models/entities.go[m
[1mindex 3152391d..a364f20d 100644[m
[1m--- a/backend/internal/models/entities.go[m
[1m+++ b/backend/internal/models/entities.go[m
[36m@@ -51,4 +51,20 @@[m [mtype Group struct {[m
 	InvitedUsers []string `json:"invited_users"`[m
 	Members      string   `json:"members"`[m
 	CreatedAt    string   `json:"created_at"`[m
[32m+[m	[32mrequest_status_id sql.NullString   `json:request_status_id`[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype Notification struct {[m
[32m+[m	[32mID                 int     `json:"id"`[m
[32m+[m	[32mUserID             int     `json:"user_id"`[m
[32m+[m	[32mUserFullName  		string `json:"user_fullName"`[m
[32m+[m	[32mGroupTitle			string `json:"group_title"`[m
[32m+[m	[32mNotificationTypeID int     `json:"notification_type_id"`[m
[32m+[m	[32mNotificationType   string  `json:"notification_type"`[m
[32m+[m	[32mMessage            string  `json:"message"`[m
[32m+[m	[32mRelatedUserID      *int    `json:"related_user_id"`[m
[32m+[m	[32mRelatedGroupID     *int    `json:"related_group_id"`[m
[32m+[m	[32mRelatedEventID     *int    `json:"related_event_id"`[m
[32m+[m	[32mIsRead             bool    `json:"is_read"`[m
[32m+[m	[32mCreatedAt          string  `json:"created_at"`[m
 }[m
[1mdiff --git a/backend/internal/router/router.go b/backend/internal/router/router.go[m
[1mindex f9222b2b..d95e84d9 100644[m
[1m--- a/backend/internal/router/router.go[m
[1m+++ b/backend/internal/router/router.go[m
[36m@@ -35,6 +35,13 @@[m [mfunc SetupRoutes(app *CoreModels.App) *http.ServeMux {[m
 	mux.HandleFunc("/api/FetchAllGroups",handlers.FetchAllGroups(app))[m
 	mux.HandleFunc("/api/group/messages", handlers.GetGroupMessages(app))[m
 	mux.HandleFunc("/api/group/send-message", handlers.SendGroupMessage(app))[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m	[32mmux.HandleFunc("/api/RequestJoin",handlers.SendRequestToJoin(app))[m
[32m+[m	[32mmux.HandleFunc("/api/GetAllNotifications",handlers.GetAllNotifications(app))[m
[32m+[m
[32m+[m
 	//Serve Images [m
 	imageHandler := http.StripPrefix("/Image/", http.FileServer(http.Dir("../Image/")))[m
 	mux.Handle("/Image/", imageHandler)[m
[1mdiff --git a/backend/internal/services/group.go b/backend/internal/services/group.go[m
[1mindex 2d4b48fa..d1291889 100644[m
[1m--- a/backend/internal/services/group.go[m
[1m+++ b/backend/internal/services/group.go[m
[36m@@ -33,6 +33,15 @@[m [mfunc (g*GroupModel) CreateGroup(group * models.Group)(error){[m
 	if err != nil {[m
 		return err[m
 	}[m
[32m+[m	[32m//Add the group creator as a member[m
[32m+[m	[32mstmt3:=`INSERT INTO group_members ([m
[32m+[m				[32mgroup_id,[m
[32m+[m				[32muser_id,[m
[32m+[m				[32mrequest_status_id,[m
[32m+[m				[32minvited_by[m
[32m+[m			[32m) VALUES (?, ?, ?, ?)`[m
[32m+[m	[32m_,err= g.DB.Exec(stmt3,group_id,group.Creator,5,group.Creator)[m
[32m+[m[41m	[m
 		for i:=0;i<len(group.InvitedUsers);i++{[m
 			_, err := g.DB.Exec(`[m
 			INSERT INTO group_members ([m
[36m@@ -55,19 +64,28 @@[m [mfunc (g*GroupModel) CreateGroup(group * models.Group)(error){[m
 	[m
 }[m
 [m
[31m-func (g *GroupModel) GetAllGroups() ([]map[string]interface{}, error) {[m
[32m+[m[32mfunc (g *GroupModel) GetAllGroups(id int) ([]map[string]interface{}, error) {[m
 	stmt := `[m
[31m-		SELECT [m
[31m-			g.id,[m
[31m-			g.title,[m
[31m-			g.description,[m
[31m-			g.creator_id,[m
[31m-			g.created_at[m
[31m-		FROM groups g[m
[31m-		ORDER BY g.created_at DESC[m
[32m+[m	[32mSELECT[m[41m [m
[32m+[m[32m    g.id,[m
[32m+[m[32m    g.title,[m
[32m+[m[32m    g.description,[m
[32m+[m[32m    CASE[m
[32m+[m[32m        WHEN (gm.user_id IS NOT NULL AND gm.user_id = ?) OR g.creator_id = ? THEN true[m
[32m+[m[32m        ELSE false[m
[32m+[m[32m    END AS is_member,[m
[32m+[m[32m    g.creator_id,[m
[32m+[m[32m    g.created_at,[m
[32m+[m[32m    gm.request_status_id[m
[32m+[m[32mFROM groups g[m
[32m+[m[32mLEFT JOIN group_members gm[m[41m [m
[32m+[m[32m    ON gm.group_id = g.id AND gm.user_id = ?[m
[32m+[m[32mORDER BY g.created_at DESC[m
[32m+[m
[32m+[m
 	`[m
 	[m
[31m-	rows, err := g.DB.Query(stmt)[m
[32m+[m	[32mrows, err := g.DB.Query(stmt,id,id,id)[m
 	if err != nil {[m
 		return nil, err[m
 	}[m
[36m@@ -75,11 +93,20 @@[m [mfunc (g *GroupModel) GetAllGroups() ([]map[string]interface{}, error) {[m
 [m
 	var groups []map[string]interface{}[m
 	for rows.Next() {[m
[31m-		var id, title, description, creatorID, createdAt string[m
[31m-		err := rows.Scan(&id, &title, &description, &creatorID, &createdAt)[m
[32m+[m		[32mvar id, title, description, creatorID, createdAt  string[m
[32m+[m		[32mvar request_status_id sql.NullString[m[41m [m
[32m+[m		[32mvar isMember bool[m
[32m+[m		[32merr := rows.Scan(&id, &title, &description,&isMember, &creatorID, &createdAt,&request_status_id)[m
 		if err != nil {[m
 			return nil, err[m
 		}[m
[32m+[m
[32m+[m		[32mvar statusID string[m
[32m+[m		[32mif request_status_id.Valid {[m
[32m+[m			[32mstatusID = request_status_id.String[m
[32m+[m		[32m} else {[m
[32m+[m			[32mstatusID = ""  // or "0" or whatever default[m
[32m+[m		[32m}[m
 		[m
 		group := map[string]interface{}{[m
 			"id":          id,[m
[36m@@ -87,6 +114,8 @@[m [mfunc (g *GroupModel) GetAllGroups() ([]map[string]interface{}, error) {[m
 			"description": description,[m
 			"creator_id":  creatorID,[m
 			"created_at":  createdAt,[m
[32m+[m			[32m"isMember":isMember,[m
[32m+[m			[32m"request_status_id":statusID,[m
 		}[m
 		groups = append(groups, group)[m
 	}[m
[1mdiff --git a/backend/internal/services/post.go b/backend/internal/services/post.go[m
[1mindex f1aa1bcf..a56069e3 100644[m
[1m--- a/backend/internal/services/post.go[m
[1m+++ b/backend/internal/services/post.go[m
[36m@@ -2,7 +2,6 @@[m [mpackage services[m
 [m
 import ([m
 	"database/sql"[m
[31m-	"log"[m
 	"social-network-backend/internal/models"[m
 )[m
 [m
[36m@@ -50,7 +49,7 @@[m [mWHERE[m
 	var Post models.Post[m
 	 err:= row.Scan(&Post.ID,&Post.UserID,&Post.Content,&Post.ImageFile,&Post.PrivacyTypeID,&Post.CreatedAt,&Post.UserNickname,&Post.UserFullname,&Post.UserImage)[m
 		if err!=nil{[m
[31m-			log.Fatal(err)[m
[32m+[m			[32mreturn Posts,err[m
 		}[m
 	 Posts = append(Posts, Post)[m
   }[m
[1mdiff --git a/frontend/src/app/ViewPost/ViewPostContent.js b/frontend/src/app/ViewPost/ViewPostContent.js[m
[1mindex 3f5ba271..0933e386 100644[m
[1m--- a/frontend/src/app/ViewPost/ViewPostContent.js[m
[1m+++ b/frontend/src/app/ViewPost/ViewPostContent.js[m
[36m@@ -202,6 +202,20 @@[m [mexport default function ViewPostContent() {[m
                 margin: "5px 0",[m
               }}[m
             >[m
[32m+[m[32m              <div className="avatar_div">[m
[32m+[m[32m                <img[m
[32m+[m[32m                  className="avatar-img"[m
[32m+[m[32m                  src={`http://localhost:8080/Image/Users/${[m
[32m+[m[32m                    commentObj.userImage?.String || "profile_notfound.png"[m
[32m+[m[32m                  }`}[m
[32m+[m[32m                  onError={(e) => {[m
[32m+[m[32m                    e.target.onerror = null;[m
[32m+[m[32m                    e.target.src =[m
[32m+[m[32m                      "http://localhost:8080/Image/Users/profile_notfound.png";[m
[32m+[m[32m                  }}[m
[32m+[m[32m                  alt="User avatar"[m
[32m+[m[32m                />[m
[32m+[m[32m              </div>[m
               {console.table(commentObj)}[m
               <p>[m
                 <strong>User:</strong>{" "}[m
[1mdiff --git a/frontend/src/app/components/Navbar.js b/frontend/src/app/components/Navbar.js[m
[1mindex 2386c05a..b0715ab9 100644[m
[1m--- a/frontend/src/app/components/Navbar.js[m
[1m+++ b/frontend/src/app/components/Navbar.js[m
[36m@@ -56,14 +56,13 @@[m [mexport default function Navbar() {[m
       <div className="nav-buttons">[m
         {loggedIn && ([m
           <>[m
[31m-           <button onClick={() => router.push("/Profile")}>[m
[31m-              My Profile[m
[31m-            </button>[m
[32m+[m[32m            <button onClick={() => router.push("/Profile")}>My Profile</button>[m
             <button onClick={() => router.push("/CreatePost")}>[m
               Create Post[m
             </button>[m
[31m-            <button onClick={() => router.push("/CreateGroup")}>[m
[31m-              Create Group[m
[32m+[m[32m            <button onClick={() => router.push("/groups")}>Create Group</button>[m
[32m+[m[32m            <button onClick={() => router.push("/Notification")}>[m
[32m+[m[32m              Check notifctaions[m
             </button>[m
 [m
             <button onClick={logout}>Logout</button>[m
[1mdiff --git a/frontend/src/app/globals.css b/frontend/src/app/globals.css[m
[1mindex 53558d60..e14a3fa4 100644[m
[1m--- a/frontend/src/app/globals.css[m
[1m+++ b/frontend/src/app/globals.css[m
[36m@@ -176,3 +176,23 @@[m
 body {[m
   padding-top: 70px;[m
 }[m
[32m+[m
[32m+[m
[32m+[m[32m.avatar-wrapper {[m
[32m+[m[32m  width: 50px;[m
[32m+[m[32m  height: 50px;[m
[32m+[m[32m  border-radius: 50%;[m
[32m+[m[32m  overflow: hidden;[m
[32m+[m[32m  border: 2px solid #ccc;[m
[32m+[m[32m  margin-right: 10px;[m
[32m+[m[32m  flex-shrink: 0;[m
[32m+[m[32m  background-color: #f0f0f0;[m
[32m+[m[32m  display: inline-block;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.avatar-img {[m
[32m+[m[32m  width: 40%;[m
[32m+[m[32m  height: 100%;[m
[32m+[m[32m  object-fit: cover;[m
[32m+[m[32m  display: block;[m
[32m+[m[32m}[m
[1mdiff --git a/frontend/src/app/groups/GroupChat.js b/frontend/src/app/groups/GroupChat.js[m
[1mindex d991f1d9..d533ba07 100644[m
[1m--- a/frontend/src/app/groups/GroupChat.js[m
[1m+++ b/frontend/src/app/groups/GroupChat.js[m
[36m@@ -130,6 +130,9 @@[m [mexport default function GroupChat({ group, onBack }) {[m
           <p>{group.description}</p>[m
         </div>[m
       </div>[m
[32m+[m[32m      <div>Chats</div>[m
[32m+[m[32m      <div>Posts</div>[m
[32m+[m[32m      <div>Events</div>[m
 [m
       {/* Messages area */}[m
       <div className="messages-container">[m
[1mdiff --git a/frontend/src/app/groups/GroupLists.js b/frontend/src/app/groups/GroupLists.js[m
[1mindex 9367a310..ecf09388 100644[m
[1m--- a/frontend/src/app/groups/GroupLists.js[m
[1m+++ b/frontend/src/app/groups/GroupLists.js[m
[36m@@ -1,19 +1,20 @@[m
[31m-'use client';[m
[31m-import { useState, useEffect } from 'react';[m
[31m-import { FetchAllGroups } from '../utils/FetchAllGroups';[m
[31m-import './group.css';[m
[32m+[m[32m"use client";[m
[32m+[m[32mimport { useState, useEffect } from "react";[m
[32m+[m[32mimport { FetchAllGroups } from "../utils/FetchAllGroups";[m
[32m+[m[32mimport "./group.css";[m
 [m
 export default function GroupLists({ onGroupClick }) {[m
   const [groups, setGroups] = useState([]);[m
   const [loading, setLoading] = useState(true);[m
   const [error, setError] = useState(null);[m
[32m+[m[32m  const [requestStatuses, setRequestStatuses] = useState({}); // Track per group[m
 [m
   const fetchGroups = async () => {[m
     try {[m
       setLoading(true);[m
       setError(null);[m
       const fetchedGroups = await FetchAllGroups();[m
[31m-      console.log("Groups received:", fetchedGroups);[m
[32m+[m[32m      console.table("Groups received:", fetchedGroups);[m
       setGroups(fetchedGroups);[m
     } catch (error) {[m
       console.error("Failed to fetch groups:", error);[m
[36m@@ -34,6 +35,50 @@[m [mexport default function GroupLists({ onGroupClick }) {[m
     }[m
   };[m
 [m
[32m+[m[32m  const handleRequestToJoin = async (id) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      setRequestStatuses((prev) => ({ ...prev, [id]: "pending" }));[m
[32m+[m
[32m+[m[32m      const response = await fetch([m
[32m+[m[32m        `http://localhost:8080/api/RequestJoin?id=${id}`,[m
[32m+[m[32m        {[m
[32m+[m[32m          method: "POST",[m
[32m+[m[32m          credentials: "include",[m
[32m+[m[32m          headers: {[m
[32m+[m[32m            "Content-Type": "application/json",[m
[32m+[m[32m          },[m
[32m+[m[32m        }[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      if (!response.ok) {[m
[32m+[m[32m        throw new Error(`HTTP error: ${response.status}`);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      setRequestStatuses((prev) => ({ ...prev, [id]: "requested" }));[m
[32m+[m
[32m+[m[32m    } catch (e) {[m
[32m+[m[32m      console.error("Error: ", e);[m
[32m+[m[32m      setRequestStatuses((prev) => ({ ...prev, [id]: "error" }));[m
[32m+[m
[32m+[m[32m      setTimeout(() => {[m
[32m+[m[32m        setRequestStatuses((prev) => ({ ...prev, [id]: null }));[m
[32m+[m[32m      }, 3000);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const getButtonContent = (groupId, requestStatus) => {[m
[32m+[m[32m    switch (requestStatus) {[m
[32m+[m[32m      case "pending":[m
[32m+[m[32m        return { text: "Sending...", disabled: true };[m
[32m+[m[32m      case "requested":[m
[32m+[m[32m        return { text: "Request Sent", disabled: true };[m
[32m+[m[32m      case "error":[m
[32m+[m[32m        return { text: "Error - Try Again", disabled: false };[m
[32m+[m[32m      default:[m
[32m+[m[32m        return { text: "+ Request to join", disabled: false };[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
   if (loading) {[m
     return ([m
       <div className="group-list-container">[m
[36m@@ -57,21 +102,64 @@[m [mexport default function GroupLists({ onGroupClick }) {[m
     <div className="group-list-container">[m
       <div className="group-list">[m
         {groups.length > 0 ? ([m
[31m-          groups.map((group) => ([m
[31m-            <div [m
[31m-              key={group.id} [m
[31m-              className="group-item clickable"[m
[31m-              onClick={() => handleGroupClick(group)}[m
[31m-            >[m
[31m-              <h3>{group.title}</h3>[m
[31m-              <p>{group.description}</p>[m
[31m-              <small>Created: {new Date(group.created_at).toLocaleDateString()}</small>[m
[31m-            </div>[m
[31m-          ))[m
[32m+[m[32m          groups.map((group) => {[m
[32m+[m[32m            const requestStatus = requestStatuses[group.id];[m
[32m+[m[32m            const buttonInfo = getButtonContent(group.id, requestStatus);[m
[32m+[m
[32m+[m[32m            return ([m
[32m+[m[32m              <div[m
[32m+[m[32m                key={group.id}[m
[32m+[m[32m                className="group-item clickable"[m
[32m+[m[32m                onClick={() => group.isMember && handleGroupClick(group)}[m
[32m+[m[32m              >[m
[32m+[m[32m                <h3>{group.title}</h3>[m
[32m+[m[32m                <p>{group.description}</p>[m
[32m+[m[32m                <small>[m
[32m+[m[32m                  Created: {new Date(group.created_at).toLocaleDateString()}[m
[32m+[m[32m                </small>[m
[32m+[m[32m                <div>[m
[32m+[m[32m                  {!group.isMember && !group.isInvited ? ([m
[32m+[m[32m                    <form[m
[32m+[m[32m                      onSubmit={(e) => {[m
[32m+[m[32m                        e.preventDefault();[m
[32m+[m[32m                        if (!buttonInfo.disabled) {[m
[32m+[m[32m                          handleRequestToJoin(group.id);[m
[32m+[m[32m                        }[m
[32m+[m[32m                      }}[m
[32m+[m[32m                    >[m
[32m+[m[32m                      <button[m
[32m+[m[32m                        type="submit"[m
[32m+[m[32m                        disabled={buttonInfo.disabled}[m
[32m+[m[32m                        className={[m
[32m+[m[32m                          requestStatus === "error" ? "error-button" : ""[m
[32m+[m[32m                        }[m
[32m+[m[32m                      >[m
[32m+[m[32m                        {buttonInfo.text}[m
[32m+[m[32m                      </button>[m
[32m+[m[32m                    </form>[m
[32m+[m[32m                  ) : ([m
[32m+[m[32m                    <div>[m
[32m+[m[32m                      {group.request_status_id === "1" ? ([m
[32m+[